{"version":3,"sources":["webpack:///./src/components/byline.js","webpack:///./src/pages/index.js","webpack:///./src/components/articlepreview.js"],"names":["Byline","props","author","date","BlogIndex","data","location","siteTitle","site","siteMetadata","title","posts","allMdx","edges","nextPageNumber","totalCount","map","node","frontmatter","AuthorData","key","fields","slug","name","postPath","description","excerpt","style","display","flexWrap","justifyContent","flexDirection","listStyle","padding","to","rel","pageQuery","ArticlePreview","marginBottom","rhythm","boxShadow"],"mappings":"mjEAAA,yBAUeA,IARA,SAACC,GAAW,IACjBC,EAAiBD,EAAjBC,OAAQC,EAASF,EAATE,KAEhB,OACE,oCAAGA,EAAH,gBAAsBD,K,kLCiDXE,UA/CG,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,SACnBC,EAAYF,EAAKG,KAAKC,aAAaC,MACnCC,EAAQN,EAAKO,OAAOC,MACpBC,EAAiBT,EAAKO,OAAOG,WAAa,GAAK,EAAI,KAEzD,OACE,kBAAC,IAAD,CAAQT,SAAUA,EAAUI,MAAOH,GACjC,kBAAC,IAAD,CAAKG,MAAM,cACVC,EAAMK,KAAI,YAAe,IAAZC,EAAW,EAAXA,KACNP,EAAQO,EAAKC,YAAYR,MACzBR,EAASiB,EAAWF,EAAKC,YAAYhB,QAC3C,OACE,kBAAC,IAAD,CACEkB,IAAKH,EAAKI,OAAOC,KACjBpB,OAAQA,EAAOqB,KACfpB,KAAMc,EAAKC,YAAYf,KACvBqB,SAAUP,EAAKI,OAAOG,SACtBd,MAAOA,EACPe,YAAaR,EAAKC,YAAYO,YAC9BC,QAAST,EAAKS,aAIpB,6BACE,wBACEC,MAAO,CACLC,QAAQ,OACRC,SAAS,OACTC,eAAe,gBACfC,cAAc,cACdC,UAAU,OACVC,QAAS,IAGX,4BACGnB,GACC,kBAAC,OAAD,CAAMoB,GAAE,SAAWpB,EAAkBqB,IAAI,QAAzC,oBAaP,IAAMC,EAAS,a,kCCzDtB,6DAwCeC,IA/BQ,SAACpC,GACtB,IAAMC,EAASD,EAAMC,OACfC,EAAOF,EAAME,KACbqB,EAAWvB,EAAMuB,SACjBd,EAAQT,EAAMS,MACde,EAAcxB,EAAMwB,YACpBC,EAAUzB,EAAMyB,QAEtB,OACE,iCACE,gCACE,wBACEC,MAAO,CACLW,aAAcC,YAAO,EAAI,KAG3B,kBAAC,OAAD,CAAMZ,MAAO,CAAEa,UAAU,QAAWN,GAAIV,GACrCd,IAGL,+BAAO,kBAAC,IAAD,CAAQR,OAAQA,EAAQC,KAAMA,MAEvC,iCACE,2BACGsB,GAAeC,EADlB,IAC2B,kBAAC,OAAD,CAAMQ,GAAIV,GAAV","file":"component---src-pages-index-js-ba1dab93f0a3f305c394.js","sourcesContent":["import React from \"react\"\n\nconst Byline = (props) => {\n  const { author, date } = props\n\n  return (\n    <>{date} – posted by {author}</>\n  )\n}\n\nexport default Byline\n","import React from \"react\"\nimport { Link, graphql } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport AuthorData from \"../../content/authors.json\"\nimport ArticlePreview from \"../components/articlepreview\"\n\nconst BlogIndex = ({ data, location }) => {\n  const siteTitle = data.site.siteMetadata.title\n  const posts = data.allMdx.edges\n  const nextPageNumber = data.allMdx.totalCount > 10 ? 2 : null\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <SEO title=\"All posts\" />\n      {posts.map(({ node }) => {\n        const title = node.frontmatter.title\n        const author = AuthorData[node.frontmatter.author]\n        return (\n          <ArticlePreview\n            key={node.fields.slug}\n            author={author.name}\n            date={node.frontmatter.date}\n            postPath={node.fields.postPath}\n            title={title}\n            description={node.frontmatter.description}\n            excerpt={node.excerpt}\n          />\n        )\n      })}\n      <nav>\n        <ul\n          style={{\n            display: `flex`,\n            flexWrap: `wrap`,\n            justifyContent: `space-between`,\n            flexDirection: `row-reverse`,\n            listStyle: `none`,\n            padding: 0,\n          }}\n        >\n          <li>\n            {nextPageNumber && (\n              <Link to={`/page/${nextPageNumber}`} rel=\"next\">\n                Next page →\n              </Link>\n            )}\n          </li>\n        </ul>\n      </nav>\n    </Layout>\n  )\n}\n\nexport default BlogIndex\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMdx(\n      sort: { fields: [frontmatter___date], order: DESC }\n      limit: 10\n    ) {\n      totalCount\n      edges {\n        node {\n          excerpt\n          fields {\n            slug,\n            postPath\n          }\n          frontmatter {\n            author\n            date(formatString: \"MMMM DD, YYYY\")\n            title\n            description\n          }\n        }\n      }\n    }\n  }\n`\n","import React from \"react\"\nimport { Link } from \"gatsby\"\n\nimport Byline from \"./byline\"\nimport { rhythm } from \"../utils/typography\"\n\n/**\n * Article intro displayed on front page, archive, author page.\n */\nconst ArticlePreview = (props) => {\n  const author = props.author\n  const date = props.date\n  const postPath = props.postPath\n  const title = props.title\n  const description = props.description\n  const excerpt = props.excerpt\n\n  return (\n    <article>\n      <header>\n        <h3\n          style={{\n            marginBottom: rhythm(1 / 4),\n          }}\n        >\n          <Link style={{ boxShadow: `none` }} to={postPath}>\n            {title}\n          </Link>\n        </h3>\n        <small><Byline author={author} date={date} /></small>\n      </header>\n      <section>\n        <p>\n          {description || excerpt} <Link to={postPath}>Read more</Link>\n        </p>\n      </section>\n    </article>\n  )\n}\n\nexport default ArticlePreview\n"],"sourceRoot":""}